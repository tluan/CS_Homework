{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 /*****************************************\
 * Assignment 3\
 * Name:    Tu Luan\
 * E-mail:  tluan@brynmawr.edu\
 * Course:      CS 206 \
 * Submitted:   September 28, 2015\
 * \
 * The main driver program for project3\
 *  \
 *\
***********************************************/\
Reflection for the assignment 3:\
      For this assignment, I spent at least 15 hours, 10 hours to actually write the codes, and 5 hours to look for documents. \
      For the extra credit part, at the beginning I did not know how to use compareTo by just reading its java documents. The document professor Cooper listed on the website was clear about what the compareTo did, but no how. So I began to look up examples online to understand how did the compareTo actually do to sort. I was surprised to find out the Array.sort ()method can just call the compareTo for several times, 
\f1 and change the input objects\'a1\'af positions according to the return. (I really surprised that the sort can do all this work itself. It\'a1\'afs so intelligent)}